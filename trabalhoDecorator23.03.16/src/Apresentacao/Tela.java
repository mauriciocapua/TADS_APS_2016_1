/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Apresentacao;

import Negocio.*;
import Negocio.Email.Email;
import Negocio.Incrementos.Criptografia;
import Negocio.Incrementos.Descritor;
import java.awt.Toolkit;

/**
 *
 * @author Mauricio Capua
 */
public class Tela extends javax.swing.JFrame {

    /**
     * Creates new form Tela
     */
    public Tela() {
        initComponents();
        this.setLocation(300, 100);
        initIcon();
    }

    public void initIcon() {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("internet-exploder.png")));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Painel_email = new javax.swing.JPanel();
        Destinatario = new javax.swing.JTextField();
        Assunto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Campo_email = new javax.swing.JTextPane();
        CheckDescritor = new javax.swing.JCheckBox();
        BarraProgresso = new javax.swing.JProgressBar();
        Retorno = new javax.swing.JTextField();
        CheckCriptografia = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        Menu = new javax.swing.JMenu();
        MenuLimpar = new javax.swing.JMenuItem();
        MenuEnviar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Internet Exploder");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        Painel_email.setBackground(new java.awt.Color(255, 255, 255));
        Painel_email.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "E-mail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        Destinatario.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Para"));
        Destinatario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DestinatarioKeyReleased(evt);
            }
        });

        Assunto.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Adicionar um assunto"));
        Assunto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                AssuntoKeyReleased(evt);
            }
        });

        Campo_email.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Campo_email.setText("Adicione uma mensagem:");
        Campo_email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Campo_emailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Campo_emailFocusLost(evt);
            }
        });
        Campo_email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Campo_emailKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Campo_email);

        CheckDescritor.setText("Descritor");
        CheckDescritor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckDescritorActionPerformed(evt);
            }
        });

        Retorno.setEditable(false);

        CheckCriptografia.setText("Criptografia");
        CheckCriptografia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckCriptografiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Painel_emailLayout = new javax.swing.GroupLayout(Painel_email);
        Painel_email.setLayout(Painel_emailLayout);
        Painel_emailLayout.setHorizontalGroup(
            Painel_emailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_emailLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Painel_emailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(Painel_emailLayout.createSequentialGroup()
                        .addComponent(Destinatario, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Assunto))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Painel_emailLayout.createSequentialGroup()
                        .addComponent(Retorno, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CheckDescritor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CheckCriptografia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                        .addComponent(BarraProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        Painel_emailLayout.setVerticalGroup(
            Painel_emailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_emailLayout.createSequentialGroup()
                .addGroup(Painel_emailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Destinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Assunto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Painel_emailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BarraProgresso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(Painel_emailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Retorno)
                        .addComponent(CheckDescritor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CheckCriptografia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(Painel_email);

        Menu.setText("Menu");

        MenuLimpar.setText("Limpar");
        MenuLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuLimparActionPerformed(evt);
            }
        });
        Menu.add(MenuLimpar);

        MenuEnviar.setText("Enviar");
        MenuEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuEnviarActionPerformed(evt);
            }
        });
        Menu.add(MenuEnviar);

        jMenuBar1.add(Menu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Campo_emailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Campo_emailFocusGained
        // TODO add your handling code here:
        if (Campo_email.getText().isEmpty() || Campo_email.getText().contains("Adicione uma mensagem:")) {
            Campo_email.setText(null);
        }
    }//GEN-LAST:event_Campo_emailFocusGained

    private void Campo_emailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Campo_emailFocusLost
        // TODO add your handling code here:
        if (Campo_email.getText().isEmpty()) {
            Campo_email.setText("Adicione uma mensagem:");
        }
    }//GEN-LAST:event_Campo_emailFocusLost

    private void DestinatarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DestinatarioKeyReleased
        // TODO add your handling code here:
        email.setDestinatario(Destinatario.getText());
    }//GEN-LAST:event_DestinatarioKeyReleased

    private void AssuntoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AssuntoKeyReleased
        // TODO add your handling code here:
        email.setAssunto(Assunto.getText());
    }//GEN-LAST:event_AssuntoKeyReleased

    private void Campo_emailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Campo_emailKeyReleased
        // TODO add your handling code here:
        email.setTexto_email(Campo_email.getText());
    }//GEN-LAST:event_Campo_emailKeyReleased

    private void MenuLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuLimparActionPerformed
        // TODO add your handling code here:
        Campo_email.setText("Adicione uma mensagem:");
        Destinatario.setText("");
        Assunto.setText("");
        email.setAssunto(null);
        email.setDestinatario(null);
        email.setTexto_email(null);
        //Retorno.setText(null);
    }//GEN-LAST:event_MenuLimparActionPerformed

    private void MenuEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuEnviarActionPerformed
        // TODO add your handling code here:

        new Thread(new Tempo()).start();

        if (CheckDescritor.isSelected()) {
            email = new Descritor(email);
            Campo_email.setText(email.getTexto_email());
        }
        if (CheckCriptografia.isSelected()) {
            email = new Criptografia(email);
            Campo_email.setText(email.getTexto_email());
        }

        if (email.Envio(email.getDestinatario(), email.getAssunto(), email.getTexto_email()) == true) {
            Retorno.setText("E-mail enviado");
            MenuLimparActionPerformed(evt);
        } else {
            Retorno.setText("E-mail não enviado");
        }


    }//GEN-LAST:event_MenuEnviarActionPerformed

    private void CheckDescritorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckDescritorActionPerformed
        // TODO add your handling code here:
        AtualizaTexto();
        /*
        if (CheckDescritor.isSelected()) {
            EmailMolde temp = new Email();
            temp = email;
            temp = new Descritor(temp);
            Campo_email.setText(temp.getTexto_email());
        } else {
            Campo_email.setText(email.getTexto_email());
        }*/

    }//GEN-LAST:event_CheckDescritorActionPerformed

    private void CheckCriptografiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckCriptografiaActionPerformed
        // TODO add your handling code here:
        /* if (CheckCriptografia.isSelected()) {
            EmailMolde temp = new Email();
            temp = email;
            temp = new Criptografia(temp);
            Campo_email.setText(temp.getTexto_email());
        } else {
            Campo_email.setText(email.getTexto_email());
        }*/
        AtualizaTexto();
    }//GEN-LAST:event_CheckCriptografiaActionPerformed

    private void AtualizaTexto() {
        EmailMolde temp = new Email();
        temp = email;

        if (CheckCriptografia.isSelected()) {
            if (CheckDescritor.isSelected()) {

                temp = new Descritor(temp);
                Campo_email.setText(temp.getTexto_email());
            } else {
                Campo_email.setText(email.getTexto_email());
            }
            temp = new Criptografia(temp);
            Campo_email.setText(temp.getTexto_email());
        } else {
            Campo_email.setText(email.getTexto_email());
            if (CheckDescritor.isSelected()) {

                temp = new Descritor(temp);
                Campo_email.setText(temp.getTexto_email());
            } else {
                Campo_email.setText(email.getTexto_email());
            }
        }

    }

    public class Tempo implements Runnable {

        @Override
        public void run() {

            for (int i = 1; i <= 100; i++) {
                BarraProgresso.setValue(i);
                BarraProgresso.repaint();
                try {
                    Thread.sleep(50);

                } catch (InterruptedException erro) {

                }
            }
            BarraProgresso.setValue(0);
            BarraProgresso.repaint();

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new Tela().setVisible(true);

            }
        });

    }
    EmailMolde email = new Email();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Assunto;
    private javax.swing.JProgressBar BarraProgresso;
    private javax.swing.JTextPane Campo_email;
    private javax.swing.JCheckBox CheckCriptografia;
    private javax.swing.JCheckBox CheckDescritor;
    private javax.swing.JTextField Destinatario;
    private javax.swing.JMenu Menu;
    private javax.swing.JMenuItem MenuEnviar;
    private javax.swing.JMenuItem MenuLimpar;
    private javax.swing.JPanel Painel_email;
    private javax.swing.JTextField Retorno;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
