/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apresentacao;

import negocio.armas.Punhos;
import negocio.*;

/**
 *
 * @author Mauricio Capua
 */
public class Tela extends javax.swing.JFrame {

    /**
     * Creates new form NovoJFrame
     */
    public Tela() {
        initComponents();
        Confirma_arma.setEnabled(false);
        listar_personagem.Lista_personagem();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Escolhe_arma = new javax.swing.JComboBox<>();
        Escolhe_personagem = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        Text_saida = new javax.swing.JTextArea();
        reset_personagem = new javax.swing.JButton();
        Confirma_personagem = new javax.swing.JButton();
        reset_arma = new javax.swing.JButton();
        Confirma_arma = new javax.swing.JButton();
        Combo_personagens = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Escolhe_arma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escolha uma arma:", "Espada", "Faca", "Arco e Flecha", "Machado" }));
        Escolhe_arma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Escolhe_armaActionPerformed(evt);
            }
        });

        Escolhe_personagem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escolha um personagem:", "Rainha", "Rei", "Cavaleiro", "asdasdsa" }));
        Escolhe_personagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Escolhe_personagemActionPerformed(evt);
            }
        });

        Text_saida.setEditable(false);
        Text_saida.setColumns(20);
        Text_saida.setRows(5);
        jScrollPane1.setViewportView(Text_saida);

        reset_personagem.setText("Reset");
        reset_personagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_personagemActionPerformed(evt);
            }
        });

        Confirma_personagem.setText("Confirmar Personagem");
        Confirma_personagem.setEnabled(false);
        Confirma_personagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Confirma_personagemActionPerformed(evt);
            }
        });

        reset_arma.setText("Reset");
        reset_arma.setEnabled(false);
        reset_arma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_armaActionPerformed(evt);
            }
        });

        Confirma_arma.setText("Confirmar Arma");
        Confirma_arma.setEnabled(false);
        Confirma_arma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Confirma_armaActionPerformed(evt);
            }
        });

        Combo_personagens.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
        Combo_personagens.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(reset_personagem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Confirma_personagem))
                            .addComponent(Escolhe_personagem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(reset_arma)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Confirma_arma, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))
                            .addComponent(Escolhe_arma, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Combo_personagens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Escolhe_arma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Escolhe_personagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Confirma_arma)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(reset_personagem)
                        .addComponent(Confirma_personagem)
                        .addComponent(reset_arma)))
                .addGap(33, 33, 33)
                .addComponent(Combo_personagens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Escolhe_armaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Escolhe_armaActionPerformed
        // TODO add your handling code here:
        if (Escolhe_arma.getSelectedIndex() == 0) {
            Text_saida.append("Escolha uma arma\n");
        } else {
            Text_saida.append(listar_armas.Retorna_arma(Escolhe_arma.getSelectedIndex() - 1).nome_arma() + " - Selecionado" + "\n");
            Confirma_arma.setEnabled(true);
        }
    }//GEN-LAST:event_Escolhe_armaActionPerformed

    private void Escolhe_personagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Escolhe_personagemActionPerformed
        // TODO add your handling code here

        if (Escolhe_personagem.getSelectedIndex() == 0) {
            Text_saida.append("Escolha o personagem\n");
            reset_arma.setEnabled(false);
            Escolhe_arma.setEnabled(false);
            Confirma_personagem.setEnabled(false);
        } else {
            Text_saida.append(listar_personagem.Retorna_Personagem((Escolhe_personagem.getSelectedIndex() - 1)).nome() + " - Selecionado\n");
            Escolhe_arma.setEnabled(true);
            Confirma_personagem.setEnabled(true);
        }
    }//GEN-LAST:event_Escolhe_personagemActionPerformed

    private void reset_personagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_personagemActionPerformed
        // TODO add your handling code here:
        Text_saida.setText("");
        Escolhe_personagem.setEnabled(true);
    }//GEN-LAST:event_reset_personagemActionPerformed

    private void Confirma_personagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Confirma_personagemActionPerformed
        // TODO add your handling code here:

        //listar_personagem.setTemp_personagem(listar_personagem.Cria_personagem(String.valueOf(Escolhe_personagem.getSelectedItem())));
        listar_personagem.Guarda_personagem_array(listar_personagem.Retorna_Personagem((Escolhe_personagem.getSelectedIndex() - 1)));
        Text_saida.append(listar_personagem.getPersonagem_array().get(listar_personagem.getPersonagem_array().size() - 1).retorno() + "\n");
        //listar_personagem.Guarda_personagem_array(listar_personagem.getTemp_personagem());
        Confirma_arma.setEnabled(true);

        Atualiza_Combo_personagens();
    }//GEN-LAST:event_Confirma_personagemActionPerformed

    private void reset_armaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_armaActionPerformed
        // TODO add your handling code here:
        if (listar_personagem.getPersonagem_array().size() > 0) {
            listar_personagem.getPersonagem_array().get(Combo_personagens.getSelectedIndex()).setLutar(new Punhos());
            Text_saida.append(listar_personagem.getPersonagem_array().get(Combo_personagens.getSelectedIndex()).Arma_atual() + "\n");
            Escolhe_arma.setEnabled(true);
            Atualiza_Combo_personagens();
        } else {
            reset_arma.setEnabled(false);
        }
    }//GEN-LAST:event_reset_armaActionPerformed

    private void Confirma_armaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Confirma_armaActionPerformed
        // TODO add your handling code here:
        if (listar_personagem.getPersonagem_array().size() <= 0) {
            Text_saida.append("Crie o personagem primeiro \n");
            Confirma_arma.setEnabled(false);
            reset_arma.setEnabled(false);
        } else if (Escolhe_arma.getSelectedIndex() == 0) {
            Text_saida.append("Escolha uma arma\n");
        } else {
            Escolhe_arma.setEnabled(true);
            Confirma_arma.setEnabled(true);
            reset_arma.setEnabled(true);

            listar_personagem.getPersonagem_array().get(Combo_personagens.getSelectedIndex()).setLutar(listar_armas.Retorna_arma(Escolhe_arma.getSelectedIndex() - 1));
        
            //listar_personagem.getPersonagem_array().get(Combo_personagens.getSelectedIndex()).setLutar(listar_armas.Seleciona_arma(String.valueOf(Escolhe_arma.getSelectedItem())));
            //listar_personagem.Seta_arma(listar_personagem.getTemp_personagem(), listar_armas.Seleciona_arma(String.valueOf(Escolhe_arma.getSelectedItem())));
            Text_saida.append(listar_personagem.getPersonagem_array().get(Combo_personagens.getSelectedIndex()).Arma_atual() + "\n");

            Escolhe_personagem.setEnabled(true);
            Atualiza_Combo_personagens();

        }
    }//GEN-LAST:event_Confirma_armaActionPerformed

    private void Atualiza_Combo_personagens() {
        Combo_personagens.removeAllItems();
        for (int i = 0; i < listar_personagem.getPersonagem_array().size(); i++) {
            Combo_personagens.setEnabled(true);
            Combo_personagens.addItem(i + " - " + (listar_personagem.getPersonagem_array().get(i).Arma_atual()));
        }
        Combo_personagens.setSelectedIndex(Combo_personagens.getItemCount() - 1);
        listar_personagem.Lista_personagem();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
    }
    Lista_personagem listar_personagem = new Lista_personagem();
    Lista_armas listar_armas = new Lista_armas();
    int Cont_combo_personagem = 0;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Combo_personagens;
    private javax.swing.JButton Confirma_arma;
    private javax.swing.JButton Confirma_personagem;
    private javax.swing.JComboBox<String> Escolhe_arma;
    private javax.swing.JComboBox<String> Escolhe_personagem;
    private javax.swing.JTextArea Text_saida;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton reset_arma;
    private javax.swing.JButton reset_personagem;
    // End of variables declaration//GEN-END:variables
}
